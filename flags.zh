// ghost.zh
// Version 2.8.15

// Old flags - 16 bits, can be ORed together
const int GHF_KNOCKBACK		  = 0000000000000001b;
const int GHF_KNOCKBACK_4WAY	 = 0000000000000011b;
const int GHF_REDUCED_KNOCKBACK  = 0000000000000101b;
const int GHF_STUN			   = 0000000000001000b;
const int GHF_CLOCK			  = 0000000000010000b;
const int GHF_NO_FALL			= 0000000000100000b;
const int GHF_SET_DIRECTION	  = 0000000001000000b;
const int GHF_SET_OVERLAY		= 0000000010000000b;
const int GHF_4WAY			   = 0000000100000000b;
const int GHF_8WAY			   = 0000001000000000b;
const int GHF_IGNORE_SOLIDITY	= 0000010000000000b;
const int GHF_IGNORE_WATER	   = 0000100000000000b;
const int GHF_IGNORE_PITS		= 0001000000000000b;
const int GHF_MOVE_OFFSCREEN	 = 0010000000000000b;
const int GHF_FAKE_Z			 = 0100000000000000b;
const int GHF_FULL_TILE_MOVEMENT = 1000000000000000b;

// Combined old flags
const int GHF_NORMAL			 = 0000000001011001b;
const int GHF_IGNORE_ALL_TERRAIN = 0001110000000000b;

// New flags - Set individually, identified as new by 17th bit
const int GHF_FLYING_ENEMY	= 0x10000;
const int GHF_IGNORE_NO_ENEMY = 0x10001;
const int GHF_WATER_ONLY	  = 0x10002;
const int GHF_DEEP_WATER_ONLY = 0x10003;
const int GHF_STATIC_SHADOW   = 0x10004;

// Internal enemy flags
const int __GHFI_GOT_HIT			   = 000001b;
const int __GHFI_WAS_FROZEN			= 000010b;
const int __GHFI_DIR_FORCED			= 000100b;
const int __GHFI_CSET_FORCED		   = 001000b;
const int __GHFI_KNOCKBACK_INTERRUPTED = 010000b;
const int __GHFI_HIT_LINK			  = 100000b;
const int __GH_UNSET_FLAGS			 = 100000b; // AND to unset flags that last one frame


void Ghost_SetFlag(npc ghost, int flag)
{
	int arr = ghost->Misc[GH_INTERNAL];
	if((flag&0x10000)!=0)
	{
		// New style flag - get the index (the last 16 bits)
		// and set that bit in __Ghost_Flags2
		arr[GHI_FLAGS2]|=1<<(flag&0xFFFF);
	}
	else
	{
		// Old style flag - just OR it into __Ghost_Flags
		arr[GHI_FLAGS]|=flag;
	}
}


void Ghost_UnsetFlag(npc ghost, int flag)
{
	int arr = ghost->Misc[GH_INTERNAL];
	if((flag&0x10000)!=0)
	{
		// New style flag
		arr[GHI_FLAGS2]&=~1<<(flag&0xFFFF);
	}
	else
	{
		// Old style flag
		arr[GHI_FLAGS]&=~flag;
	}
}


bool Ghost_FlagIsSet(npc ghost, int flag)
{
	int arr = ghost->Misc[GH_INTERNAL];
	if((flag&0x10000)!=0)
	{
		// New style flag
		return (arr[GHI_FLAGS2]&(1<<(flag&0xFFFF)))!=0;
	}
	else
	{
		// Old style flag
		return (arr[GHI_FLAGS]&flag)==flag;
	}
}

void Ghost_SetIFlag(npc ghost, int flag)
{
	int arr = ghost->Misc[GH_INTERNAL];
	arr[GHI_IFLAGS]|=flag;
}


void Ghost_UnsetIFlag(npc ghost, int flag)
{
	int arr = ghost->Misc[GH_INTERNAL];
	arr[GHI_IFLAGS]&=~flag;
}


bool Ghost_IFlagIsSet(npc ghost, int flag)
{
	int arr = ghost->Misc[GH_INTERNAL];
	return (arr[GHI_IFLAGS]&flag)==flag;
}


void Ghost_ClearFlags(npc ghost)
{
	int arr = ghost->Misc[GH_INTERNAL];
	arr[GHI_FLAGS]=0;
	arr[GHI_FLAGS2]=0;
}

void Ghost_ClearIFlags(npc ghost)
{
	int arr = ghost->Misc[GH_INTERNAL];
	arr[GHI_IFLAGS]&=__GH_UNSET_FLAGS;
}
